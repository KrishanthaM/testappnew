#Use OpenJDK base docker image from dockerhub and open the application port on the docker container
box:
  id: openjdk:8-jdk
#  id: jimador/docker-jdk-8-maven-node
ports:
  - 8080
 
#Build our application using Maven, just as we always have
build:
  steps:
    - script:
        name: pwd
        code: pwd
    - install-packages:
        packages: maven
    - script:
        name: maven spring boot build
        cwd: springboot-movie-people-api
        code: mvn clean install:install-file -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.3 -Dpackaging=jar -Dfile=lib/ojdbc7.jar -DgeneratePom=true package

push-release-2:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $OCI_AUTH_TOKEN
        repository: $DOCKER_REGISTRY/$DOCKER_REPO
        registry: https://$DOCKER_REGISTRY/v2
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT-springboot-movie-people-api
        working-dir: /pipeline/source/springboot-movie-people-api
        ports: 8000
        cmd: java -jar target/springboot-movie-people-api-1.0.jar

#Deploy our container from the Oracle Container Registry to the Oracle Container Engine (Kubernetes)
deploy-to-cluster:
  box:
    id: alpine
    cmd: /bin/sh

  steps:
    - bash-template
    
    - kubectl:
        name: create namespace
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-namespace-config.yaml

    - kubectl:
        name: delete secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret wercker --namespace=${KUBERNETES_NAMESPACE}; echo delete registry secret

    - kubectl:
        name: create secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wercker --docker-server=$DOCKER_REGISTRY --docker-email=nobody@oracle.com --docker-username=$DOCKER_USERNAME --docker-password='$OCI_AUTH_TOKEN' --namespace=${KUBERNETES_NAMESPACE}; echo delete registry secret

    - script:
        name: "Visualise Kubernetes config"
        code: cat kube-springboot-movie-people-api-config.yml

    - kubectl:
        name: deploy springboot-movie-people-api to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-springboot-movie-people-api-config.yml
